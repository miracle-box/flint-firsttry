---
import Layout from '@layouts/docs-content.astro';
import { siteConfig } from '@config';
import { locales } from '@utils/i18n';
import { fetchDocs, getFallbackBySlugs, getLocalDocs } from '@utils/docs';
import type { Docs } from '~/types';

type Props = Docs & {
	fallback: boolean;
};

export async function getStaticPaths() {
	const paths = [];
	const allPages = await fetchDocs();

	paths.push(
		...allPages.map((p) => ({
			params: { locale: p.locale, slug: p.slug },
			props: { ...p, fallback: false },
		})),
	);

	// Fallback pages
	for (const locale of locales) {
		if (locale === siteConfig.site.defaultLocale) continue;

		/* eslint-disable no-await-in-loop */
		const localDocs = await getLocalDocs(locale);
		const fallbackPages = await getFallbackBySlugs(localDocs.map(({ slug }) => slug));
		/* eslint-enable no-await-in-loop */

		paths.push(
			...fallbackPages.map((p) => ({
				params: { locale, slug: p.slug },
				// Ensure we have fallbacked locale here.
				props: { ...p, locale, fallback: true },
			})),
		);
	}

	return paths;
}

// Render the page
const { Content, headings, id, locale } = Astro.props;
---

<Layout headings={headings} fileId={id} locale={locale}>
	<Content />
</Layout>
